"use strict";var ApplicationConfiguration=function(){var applicationModuleName="cricketadmin",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("content-management"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("imei-lookup"),ApplicationConfiguration.registerModule("rule-management"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(){}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content=""},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("content-management").config(["$stateProvider",function($stateProvider){$stateProvider.state("content-management",{url:"/contentManagement",templateUrl:"modules/content-management/views/content-management.client.view.html"})}]),angular.module("content-management").controller("ContentManagementController",["$scope","ContentServices",function($scope,ContentServices){$scope.accessControl=ContentServices.getAccessControl(),$scope.availableContent=ContentServices.getAvailableContent(),$scope.contentSelectedIndex=ContentServices.getContentSelectedIndex(),$scope.status_text="",$scope.accessControl.showContentDescription=!1,$scope.accessControl.addContentEnabled=!1,$scope.accessControl.testScope=!1,console.dir($scope.accessControl),$scope.content={contentShortDescr:"",contentLongDescr:""},$scope.selectContent=function(){$scope.accessControl.addContentEnabled=!0,$scope.status_text="",$scope.content={contentShortDescr:"",contentLongDescr:""},"ADD"===$scope.contentSelectedIndex?$scope.accessControl.showContentDescription=!0:($scope.accessControl.showContentDescription=!0,$scope.accessControl.addContentEnabled=!1,$scope.content.contentShortDescr=$scope.availableContent[$scope.contentSelectedIndex].contentShortDescr,$scope.content.contentLongDescr=$scope.availableContent[$scope.contentSelectedIndex].contentLongDescr)},$scope.saveContent=function(){$scope.status_text=ContentServices.saveContent($scope.content,$scope.contentSelectedIndex),$scope.contentSelectedIndex=ContentServices.getContentSelectedIndex()},$scope.deleteContent=function(){""!==$scope.contentSelectedIndex&&"ADD"!==$scope.contentSelectedIndex&&$scope.availableContent.splice($scope.contentSelectedIndex,1),ContentServices.updateSessionStorage(),ContentServices.resetScope(),$scope.accessControl.addContentEnabled=!1,$scope.status_text=" (content deleted)"},$scope.cancelContent=function(){ContentServices.cancelContent(),$scope.contentSelectedIndex=ContentServices.getContentSelectedIndex()}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").factory("ContentServices",[function(){var accessControl={addContentEnabled:!1,addRuleEnabled:!1,showContentDescription:!1},availableContent=[{contentShortDescr:"Up to 3G Data Speeds ",contentLongDescr:"3G download speeds range from approximately 700 Kbps up to 1.7 Mbps."},{contentShortDescr:"Unlimited Talk and Messaging ",contentLongDescr:"Get unlimited voice minutes with all the calling features you expect - voicemail, call waiting/forwarding, and 3-way calling"}],availableFactors=[{id:"LTE",tooltip:"Long Term Evolution (4G)"},{id:"UMTS",tooltip:"Universal Mobile Telecom System (3G)"},{id:"2100",tooltip:"Frequency Band 2100 (IMT)"},{id:"1900",tooltip:"Frequency Band 1900 (PCS)"},{id:"Data Only",tooltip:"Data Only"},{id:"NSTE Capable",tooltip:"NSTE Capable"},{id:"AMR 5.9",tooltip:"Adaptive Multi-Rate 5.9"},{id:"AMR MM",tooltip:"Adaptive Multi-Rate MM"}],availableRules=[{id:"LTE Data only Device",content:["0"],factor:["4","0"]},{id:"LTE Voice 2100 NSET",content:["0"],factor:["2","5"]},{id:"LTE Voice 1900 Unlimited Text/Talk",content:["0","1"],factor:["1","3"]}],content={contentShortDescr:"",contentLongDescr:""},contentSelectedIndex="",sessionStorage=null;return{getAccessControl:function(){return accessControl},getAvailableContent:function(){return availableContent},getAvailableFactors:function(){return availableFactors},getAvailableRules:function(){return availableRules},getContentSelectedIndex:function(){return contentSelectedIndex},getSessionStorage:function(){if(sessionStorage.getItem("exportData")){var backingStore=sessionStorage.getItem("exportData"),localStore=JSON.parse(backingStore);availableContent=localStore.availableContent,availableFactors=localStore.availableFactors,availableRules=localStore.availableRules}},updateSessionStorage:function(){if(sessionStorage){console.log("updating session storage"),sessionStorage.removeItem("exportData");var exportData={availableFactors:availableFactors,availableRules:availableRules,availableContent:availableContent};sessionStorage.setItem("exportData",JSON.stringify(exportData))}},saveContent:function(newContent,contentSelectedIndex){return""!==contentSelectedIndex&&"ADD"!==contentSelectedIndex?availableContent[contentSelectedIndex]=newContent:availableContent.push(newContent),this.resetScope(),accessControl.addContentEnabled=!1," (content saved)"},cancelContent:function(){accessControl.addContentEnabled=!1,this.resetScope()},resetScope:function(){accessControl.showContentDescription=!1,contentSelectedIndex="",content={contentShortDescr:"",contentLongDescr:""}}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("imei-lookup").config(["$stateProvider",function($stateProvider){$stateProvider.state("imei-lookup",{url:"/imeilookup",templateUrl:"modules/imei-lookup/views/imei-lookup.client.view.html"})}]),angular.module("imei-lookup").controller("ImeiLookupController",["$scope",function(){}]),angular.module("rule-management").config(["$stateProvider",function($stateProvider){$stateProvider.state("rule-management",{url:"/ruleManagement",templateUrl:"modules/rule-management/views/rule-management.client.view.html"})}]),angular.module("rule-management").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Device Management","deviceManagement","dropdown"),Menus.addSubMenuItem("topbar","deviceManagement","Content Management","contentManagement"),Menus.addSubMenuItem("topbar","deviceManagement","Rule Management","ruleManagement")}]),angular.module("rule-management").controller("RuleManagementController",["$scope","ContentServices",function($scope,ContentServices){$scope.accessControl=ContentServices.getAccessControl(),$scope.availableContent=ContentServices.getAvailableContent(),$scope.availableFactors=ContentServices.getAvailableFactors(),$scope.availableRules=ContentServices.getAvailableRules(),$scope.rule={id:"",content:[],factor:[]},$scope.content={contentShortDescr:"",contentLongDescr:""},$scope.selected_content=[],$scope.selected_factors=[],$scope.selected_rule={},$scope.status_text="",$scope.ruleSelectedIndex="",$scope.selectRule=function(){$scope.accessControl.addRuleEnabled=!0,"ADD"===$scope.ruleSelectedIndex?($scope.rule.id="",$scope.selected_content=[],$scope.selected_factors=[]):($scope.selected_rule=$scope.availableRules[$scope.ruleSelectedIndex],$scope.selected_factors=$scope.selected_rule.factor,$scope.selected_content=$scope.selected_rule.content,console.log("ruleSelectedIndex = "+$scope.ruleSelectedIndex),console.log("$scope.selected_factors = "+$scope.selected_factors),console.log("$scope.selected_content = "+$scope.selected_content),$scope.rule.id=$scope.selected_rule.id),$scope.status_text=""},$scope.saveRule=function(){var tempContent=$scope.selected_content;$scope.rule.content=tempContent;var tempFactor=$scope.selected_factors;$scope.rule.factor=tempFactor;var rule=$scope.rule;""!==$scope.ruleSelectedIndex&&"ADD"!==$scope.ruleSelectedIndex?$scope.availableRules[$scope.ruleSelectedIndex]=rule:$scope.availableRules.push(rule),$scope.status_text=" (rule saved)",$scope.accessControl.addRuleEnabled=!1,ContentServices.updateSessionStorage(),$scope.ruleSelectedIndex="",$scope.rule={id:"",content:[],factor:[]},$scope.selected_content=[],$scope.selected_factors=[]},$scope.deleteRule=function(){""!==$scope.ruleSelectedIndex&&"ADD"!==$scope.ruleSelectedIndex&&$scope.availableRules.splice($scope.ruleSelectedIndex,1),ContentServices.updateSessionStorage(),$scope.accessControl.addRuleEnabled=!1,$scope.ruleSelectedIndex="",$scope.rule={id:"",content:[],factor:[]},$scope.selected_content=[],$scope.selected_factors=[],$scope.status_text=" (rule deleted)"},$scope.resetForm=function(){$scope.accessControl.addRuleEnabled=!1,$scope.status_text="",$scope.ruleSelectedIndex=""},$scope.addContent=function(){$scope.accessControl.addContentEnabled=!0,$scope.contentSelectedIndex="",$scope.content={contentShortDescr:"",contentLongDescr:""}},$scope.cancelContent=function(){ContentServices.cancelContent(),$scope.contentSelectedIndex=ContentServices.getContentSelectedIndex()},$scope.saveContent=function(){$scope.status_text=ContentServices.saveContent($scope.content,$scope.contentSelectedIndex),$scope.contentSelectedIndex=ContentServices.getContentSelectedIndex()}}]),angular.module("rule-management").directive("checkList",function(){return{scope:{list:"=checkList",value:"@"},link:function(scope,elem){var handler=function(setup){var checked=elem.prop("checked"),index=scope.list.indexOf(scope.value);checked&&-1===index?setup?elem.prop("checked",!1):scope.list.push(scope.value):checked||-1===index||(setup?elem.prop("checked",!0):scope.list.splice(index,1))},setupHandler=handler.bind(null,!0),changeHandler=handler.bind(null,!1);elem.bind("change",function(){scope.$apply(changeHandler)}),scope.$watch("list",setupHandler,!0)}}}),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);